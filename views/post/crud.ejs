<script type="text/javascript" src="/javascripts/jquery.form.js"></script>
<script type="text/javascript" src="/javascripts/markup_generators/post.js"></script>
<script type="text/javascript">
  var doc;
  
  $(document).ready(function() {
    doc = $(document);
    $("article.post").each(function() {
      initPostArticle($(this));
    });
  });
  
  function initPostArticle(postArticle) {
    var form = postArticle.find("form");
    
    form.ajaxForm({
      success: function(data) {
        if(data.error) {
          alert("Beim Speichern ist ein Fehler aufgetreten.");
          return;
        }
        
        var paths = window.location.pathname.split('/');
        var lastPart = paths[paths.length - 1];
        
        if((data.post.published && lastPart == 'unpublished') || (!data.post.published && lastPart == 'published')) {
          postArticle.remove();
        } else {
          resetAltered(postArticle);
        }
      },
      dataType: 'json'
    });
    
    postArticle.find("*[name]").each(function() {
      $(this).change(function() {
        setAltered(postArticle);
      });
    });
    
    postArticle.find('a.iconic').each(function() {
      var link = $(this);
      var replacement = $("<span class='iconic'>" + link.html() + "</span>");
      replacement.css("cursor", "pointer");
      
      replacement.click(function() {
        if(link.attr('href').indexOf('#') != -1) {
          var hashTarget = link.attr('href').split("#")[1];
          var currScroll = doc.scrollTop();
          window.location.hash = hashTarget;
          doc.scrollTop(currScroll);
        }
        
        if(typeof link.attr('data-onclick') !== 'undefined') {
          eval(link.attr('data-onclick'));
        }
      });
      
      link.replaceWith(replacement);
    });
  }
  
  function save(postArticle) {
    postArticle.find("form:first").submit();
  }
  
  function remove(postArticle) {
    if(window.confirm("Wirklich Löschen?")) {
      console.log(postArticle);
      $.getJSON('/post/delete', {id: postArticle.find("*[name='id']").val()}, function(data) {
        if(data.err) {
          alert("Fehler beim Löschen eines Posts");
          return;
        } else {
          postArticle.remove();
        }
      });
    }
  }
  
  function removeComment(element) {
    var commentDiv = element.parents("div:first");
    var postArticle = commentDiv.parents("article.post:first");
    
    var commentId = commentDiv.find("input[type='hidden']").val();
    var postId = postArticle.find("form").find("*[name='id']").val();
    
    $.getJSON('/comment/delete', {commentId: commentId, postId: postId}, function(data) {
      if(data.err) {
        console.log("Fehler beim Löschen eines Comments");
      } else {
        commentDiv.remove();
      }
    });
  }
  
  function publish(postArticle) {
    postArticle.find("*[name='published']").val("true");
    postArticle.find("form:first").submit();
  }
  
  function unpublish(postArticle) {
    postArticle.find("*[name='published']").val("false");
    postArticle.find("form:first").submit();
  }
  
  function newPost() {
    $.getJSON('/post/create', function(data) {
      if(data.err) {
        alert("Fehler beim Erstellen eines Posts");
        return;
      } else {
        var postArticle = $(generatePostMarkup(data.post));
        initPostArticle(postArticle);
        
        $('#posts').append(postArticle);
        window.location.hash = data.post._id + "_attributes";
      }
    });
  }
  
  function getPost(element) {
    return element.parents("article:first");
  }
  
  function updateTitle(titleInput) {
    var post = getPost(titleInput);
    post.find("*[data-content='title']").html(titleInput.val());
  }
  
  function updateSheet(sheetDropdown) {
    var post = getPost(sheetDropdown);
    
    $.getJSON('/getFailureNumber', {sheet: sheetDropdown.val()}, function(data) {
      post.find("*[data-content='sheet']").html(sheetDropdown.val());
      var nrLabel = post.find("*[data-content='nr']");
      var nrInput = post.find("*[name='nr']");
      if(data.err) {
        nrLabel.html("err");
      } else {
        nrInput.val(data.nr);
        nrLabel.html(data.nr);
      }
    });
  }
  
  function setAltered(postArticle) {
    postArticle.find("*[data-content='altered']").html('*');
  }
  
  function resetAltered(postArticle) {
    postArticle.find("*[data-content='altered']").empty();
  }
</script>



<script type="text/javascript">
    $(document).ready(function() {
        var addEvent = (function () {
          if (document.addEventListener) {
            return function (el, type, fn) {
              if (el && el.nodeName || el === window) {
                el.addEventListener(type, fn, false);
              } else if (el && el.length) {
                for (var i = 0; i < el.length; i++) {
                  addEvent(el[i], type, fn);
                }
              }
            };
          } else {
            return function (el, type, fn) {
              if (el && el.nodeName || el === window) {
                el.attachEvent('on' + type, function () { return fn.call(el, window.event); });
              } else if (el && el.length) {
                for (var i = 0; i < el.length; i++) {
                  addEvent(el[i], type, fn);
                }
              }
            };
          }
        })();
        
        var links = document.querySelectorAll('ul.dropme > li > a')
          , link = null
          , draggable = null;
        for (var i = 0; i < links.length; i++) {
            link = links[i];  
            link.setAttribute('draggable', 'true');
            addEvent(link, 'dragstart', function (event) {
                event.dataTransfer.effectAllowed = 'copy'; // only dropEffect='copy' will be dropable
                event.dataTransfer.setData('Text', this.id); // required otherwise doesn't work
                draggable = event.target;
            });
        }
        
        var textareas = document.querySelectorAll('ul.dropme + textarea');
        
        for(var j = 0; j < textareas.length; j++) {
            var textarea = textareas[j];
            
            addEvent(textarea, 'dragover', function(event) {
                if (event.preventDefault) event.preventDefault(); // allows us to drop
                event.dataTransfer.dropEffect = 'copy';
                return false;
            });
            
            addEvent(textarea, 'dragenter', function(event) {
                return false;
            });
            
            addEvent(textarea, 'drop', function(event) {
                textarea.innerHTML += draggable.attributes['data-markup'].nodeValue;
                return false;
            });
        }
    });
</script>


<link rel="stylesheet" href="/stylesheets/crud.css" />

<div id="posts">
  <% posts.forEach(function(post) { %>
      <%- generatePostMarkup(post) %>
  <% }); %>
</div>
<input type="button" onClick="newPost()" value="neuer Post" />